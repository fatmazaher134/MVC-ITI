// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvcLab1.Models;

#nullable disable

namespace mvcLab1.Migrations
{
    [DbContext(typeof(ITIDBContext))]
    [Migration("20251009184751_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mvcLab1.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("MinDegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = 100,
                            DepartmentId = 1,
                            Hours = 0,
                            MinDegree = 60,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Degree = 100,
                            DepartmentId = 1,
                            Hours = 0,
                            MinDegree = 60,
                            Name = "MVC"
                        },
                        new
                        {
                            Id = 3,
                            Degree = 100,
                            DepartmentId = 2,
                            Hours = 0,
                            MinDegree = 60,
                            Name = "Angular"
                        });
                });

            modelBuilder.Entity("mvcLab1.Models.CrsResult", b =>
                {
                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.HasKey("TraineeId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("CrsResults");

                    b.HasData(
                        new
                        {
                            TraineeId = 1,
                            CourseId = 1,
                            Degree = 95
                        },
                        new
                        {
                            TraineeId = 1,
                            CourseId = 2,
                            Degree = 85
                        },
                        new
                        {
                            TraineeId = 2,
                            CourseId = 3,
                            Degree = 92
                        },
                        new
                        {
                            TraineeId = 3,
                            CourseId = 1,
                            Degree = 88
                        });
                });

            modelBuilder.Entity("mvcLab1.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manager = "Ahmed Ali",
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = 2,
                            Manager = "Mona Saleh",
                            Name = "Operating Systems"
                        });
                });

            modelBuilder.Entity("mvcLab1.Models.Instractore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Instractores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            CourseId = 2,
                            DepartmentId = 1,
                            Name = "Fatma",
                            Salary = 15000,
                            imageUrl = "Images/girl.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Alex",
                            CourseId = 1,
                            DepartmentId = 2,
                            Name = "Hassan",
                            Salary = 16000,
                            imageUrl = "Images/man.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Giza",
                            CourseId = 3,
                            DepartmentId = 1,
                            Name = "Salma",
                            Salary = 13000,
                            imageUrl = "Images/girl.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Assuit",
                            CourseId = 2,
                            DepartmentId = 1,
                            Name = "Ahmed",
                            Salary = 12000,
                            imageUrl = "Images/man.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Giza",
                            CourseId = 1,
                            DepartmentId = 2,
                            Name = "Naira",
                            Salary = 10000,
                            imageUrl = "Images/girl.jpg"
                        });
                });

            modelBuilder.Entity("mvcLab1.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            DepartmentId = 1,
                            Name = "Omar",
                            grade = 1,
                            imageUrl = "Images/man.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Mansoura",
                            DepartmentId = 2,
                            Name = "Fatma",
                            grade = 2,
                            imageUrl = "Images/girl.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Tanta",
                            DepartmentId = 1,
                            Name = "Youssef",
                            grade = 1,
                            imageUrl = "Images/man.jpg"
                        });
                });

            modelBuilder.Entity("mvcLab1.Models.Course", b =>
                {
                    b.HasOne("mvcLab1.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("mvcLab1.Models.CrsResult", b =>
                {
                    b.HasOne("mvcLab1.Models.Course", "Course")
                        .WithMany("CrsResults")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvcLab1.Models.Trainee", "Trainee")
                        .WithMany()
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("mvcLab1.Models.Instractore", b =>
                {
                    b.HasOne("mvcLab1.Models.Course", "Course")
                        .WithMany("Instractores")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvcLab1.Models.Department", "Department")
                        .WithMany("Instractores")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("mvcLab1.Models.Trainee", b =>
                {
                    b.HasOne("mvcLab1.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("mvcLab1.Models.Course", b =>
                {
                    b.Navigation("CrsResults");

                    b.Navigation("Instractores");
                });

            modelBuilder.Entity("mvcLab1.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instractores");

                    b.Navigation("Trainees");
                });
#pragma warning restore 612, 618
        }
    }
}
